# Generated by Django 5.2.3 on 2025-06-28 08:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('institution_type', models.CharField(choices=[('hospital', 'Hospital'), ('school', 'School'), ('company', 'Company'), ('government', 'Government'), ('religious', 'Religious'), ('restaurant', 'Restaurant'), ('entertainment', 'Entertainment'), ('other', 'Other')], max_length=20)),
                ('website', models.URLField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('location_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('school', 'School'), ('hospital', 'Hospital'), ('travel', 'Travel'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='people/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('birthday', 'Birthday'), ('wedding', 'Wedding'), ('graduation', 'Graduation'), ('funeral', 'Funeral'), ('reunion', 'Family Reunion'), ('holiday', 'Holiday'), ('milestone', 'Milestone'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.institution')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.location')),
                ('participants', models.ManyToManyField(blank=True, related_name='events', to='family.person')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Multimedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('media_type', models.CharField(choices=[('photo', 'Photo'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to='media/')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('events', models.ManyToManyField(blank=True, related_name='media', to='family.event')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.location')),
                ('people', models.ManyToManyField(blank=True, related_name='media', to='family.person')),
            ],
            options={
                'verbose_name_plural': 'Multimedia',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('checkup', 'Medical Checkup'), ('illness', 'Illness'), ('medication', 'Medication'), ('surgery', 'Surgery'), ('allergy', 'Allergy'), ('genetic', 'Genetic Condition'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date', models.DateField()),
                ('doctor', models.CharField(blank=True, max_length=100)),
                ('is_hereditary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.institution')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='family.person')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('career_type', models.CharField(choices=[('education', 'Education'), ('work', 'Work'), ('volunteer', 'Volunteer'), ('internship', 'Internship'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
                ('salary_range', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('events', models.ManyToManyField(blank=True, related_name='careers', to='family.event')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.institution')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='career_history', to='family.person')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('time_range', models.CharField(choices=[('short', 'Short-term (< 1 year)'), ('medium', 'Medium-term (1-5 years)'), ('long', 'Long-term (> 5 years)')], max_length=10)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')], default=2)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('expected_outcome', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('involved_people', models.ManyToManyField(blank=True, related_name='plans', to='family.person')),
            ],
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('asset_type', models.CharField(choices=[('property', 'Real Estate'), ('vehicle', 'Vehicle'), ('jewelry', 'Jewelry'), ('insurance', 'Insurance'), ('investment', 'Investment'), ('document', 'Important Document'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('estimated_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('legal_status', models.CharField(choices=[('owned', 'Owned'), ('leased', 'Leased'), ('shared', 'Shared Ownership'), ('trust', 'In Trust'), ('other', 'Other')], default='owned', max_length=20)),
                ('importance', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')], default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_documents', models.ManyToManyField(blank=True, related_name='assets', to='family.multimedia')),
                ('owners', models.ManyToManyField(related_name='assets', to='family.person')),
                ('plans', models.ManyToManyField(blank=True, related_name='assets', to='family.planning')),
            ],
            options={
                'verbose_name_plural': 'Assets',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('story_type', models.CharField(choices=[('memory', 'Memory'), ('legend', 'Family Legend'), ('experience', 'Life Experience'), ('wisdom', 'Wisdom'), ('tradition', 'Tradition'), ('other', 'Other')], default='memory', max_length=20)),
                ('date_occurred', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('events', models.ManyToManyField(blank=True, related_name='stories', to='family.event')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='family.location')),
                ('people', models.ManyToManyField(blank=True, related_name='stories', to='family.person')),
            ],
            options={
                'verbose_name_plural': 'Stories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='multimedia',
            name='stories',
            field=models.ManyToManyField(blank=True, related_name='media', to='family.story'),
        ),
        migrations.CreateModel(
            name='Heritage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('heritage_type', models.CharField(choices=[('values', 'Family Values'), ('tradition', 'Tradition'), ('wisdom', 'Wisdom'), ('skill', 'Skill'), ('recipe', 'Recipe'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('importance', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')], default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('events', models.ManyToManyField(blank=True, related_name='heritage', to='family.event')),
                ('inheritors', models.ManyToManyField(blank=True, related_name='heritage_inherited', to='family.person')),
                ('origin_person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='heritage_originated', to='family.person')),
                ('stories', models.ManyToManyField(blank=True, related_name='heritage', to='family.story')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('timeline_type', models.CharField(choices=[('personal', 'Personal Milestone'), ('family', 'Family Event'), ('historical', 'Historical Context'), ('other', 'Other')], max_length=20)),
                ('date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('importance', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')], default=2)),
                ('historical_context', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('events', models.ManyToManyField(blank=True, related_name='timeline_entries', to='family.event')),
                ('people', models.ManyToManyField(blank=True, related_name='timeline_entries', to='family.person')),
                ('stories', models.ManyToManyField(blank=True, related_name='timeline_entries', to='family.story')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('parent', 'Parent'), ('child', 'Child'), ('spouse', 'Spouse'), ('sibling', 'Sibling'), ('grandparent', 'Grandparent'), ('grandchild', 'Grandchild'), ('friend', 'Friend'), ('colleague', 'Colleague'), ('other', 'Other')], max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('person_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_from', to='family.person')),
                ('person_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_to', to='family.person')),
            ],
            options={
                'unique_together': {('person_from', 'person_to', 'relationship_type')},
            },
        ),
    ]
